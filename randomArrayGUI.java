import java.awt.*;
import javax.swing.*;
import javax.swing.border.*;
import java.awt.event.*;
import java.util.Random;
import java.util.Arrays;

// Public class that extends from the JFrame class and implements method ActionListener for the buttons
public class randomArrayGUI extends JFrame implements ActionListener{
    // Definition of variables needed
    private static final long serialVersionUID = 1L;
    private JLabel label;
    // Definition of variable getArray - Needed for having to buttons affect the same label
    public int[] getArray;

    // Public class RandomArray
    public static class RandomArray{
        private static int[] Array = {0};
    
        // Definition of randomFill() Function - Creates random numbers and return int randomNum
        private static int randomFill(){
            Random rand = new Random();
            int randomNum = rand.nextInt(999);
            return randomNum;
            }
        // Definition of list() Function - Fills the array Array with 10 new ints using randomFill() Function
        private static int[] list(){
            Array = new int[10];
            for(int i=0;i<Array.length;i++)
            {
                Array[i] = randomFill();
            }
            return Array;
        }
        // Method to access list() Function
        public static int[] getlist(){
            return list();
        }
    }

    // randomArrayFUI() Function - Sets a new Frame, label and buttons with actionCommand and action Listener
    public randomArrayGUI(){
        super("Random Array Generator");
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setPreferredSize(new Dimension(400, 200));
        ((JPanel) getContentPane()).setBorder(new EmptyBorder(12, 12, 12, 12));
        setLayout(new FlowLayout());
        JButton btn = new JButton("Randomize (0-99)");
        btn.setActionCommand("myButton1");
        btn.addActionListener(this);
        label = new JLabel("Click Randomize to get a list of 10 Numbers");
        add(label);
        add(btn);
        pack();
        JButton btn4 = new JButton("Randomize (0-999)");
        btn4.setActionCommand("myButton4");
        btn4.addActionListener(this);
        add(btn4);
        pack();
        JButton btn2 = new JButton("Sort");
        btn2.setActionCommand("myButton2");
        btn2.addActionListener(this);
        add(btn2);
        pack();
        JButton btn3 = new JButton("Quit");
        btn3.setActionCommand("myButton3");
        btn3.addActionListener(this);
        add(btn3);
        pack();
        setLocationRelativeTo(null);
        setVisible(true);
        setResizable(false);
    }

    // Function actionPerformed() listens to the action performed by the buttons
    public void actionPerformed(ActionEvent e){
        // First method to generate random numbers between 0-99 after clicking myButton1 - non sortable method
        if (e.getActionCommand().equals("myButton1"))
        {
            Random r = new Random();
            label.setText("Array: ["+String.valueOf(r.nextInt(99)+", "+String.valueOf(r.nextInt(99))
            +", "+String.valueOf(r.nextInt(99))+", "+String.valueOf(r.nextInt(99))
            +", "+String.valueOf(r.nextInt(99))+", "+String.valueOf(r.nextInt(99))
            +", "+String.valueOf(r.nextInt(99))+", "+String.valueOf(r.nextInt(99))
            +", "+String.valueOf(r.nextInt(99))+", "+String.valueOf(r.nextInt(99))
            +", "+String.valueOf(r.nextInt(99)+"]")));
        }
        // Method to sort the numbers generated by the second method
        if(e.getActionCommand().equals("myButton2"))
        {
            int[] sortArray = getArray;
            Arrays.sort(sortArray);
            String strArray[] = Arrays.stream(sortArray).mapToObj(String::valueOf).toArray(String[]::new);
            label.setText("Array: ["+String.join(",", strArray)+"]");
        }
        // Third button - exit out of the program
        if(e.getActionCommand().equals("myButton3"))
        {
            System.exit(0);
        }
        // Second method to generate random numbers between 0-999 after clicking myButton2 - sortable method 
        if(e.getActionCommand().equals("myButton4"))
        {
            getArray = RandomArray.getlist();
            String strArray[] = Arrays.stream(getArray).mapToObj(String::valueOf).toArray(String[]::new);
            label.setText("Array: ["+String.join(",", strArray)+"]");
        }
    }
    
    // Main Function 
    public static void main(String[] args){
        new randomArrayGUI();
    }
}